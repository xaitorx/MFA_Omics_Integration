labs (title= "Top metabolome contributors",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 0.4))
grafico + geom_segment(colour="steelblue", aes(x=Y, xend=Y, y=-0.2,size=1, yend=contrib-0.01)) +
geom_point( size=6, color="steelblue", fill=alpha("steelblue"), alpha=0.8, shape=21, stroke=2)+
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top mRNA contributors",y = "Contribution (%)", x = "") +
coord_cartesian(ylim = c(0, 0.35)) +
theme(plot.title = element_text(hjust = 0.5))+
scale_y_continuous(expand = c(0, 0))
grafico + geom_segment(colour="steelblue", aes(x=Y, xend=Y, y=-0.2,size=1, yend=contrib-0.01)) +
geom_point( size=6, color="steelblue", fill=alpha("steelblue"), alpha=0.8, shape=21, stroke=2)+
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top mRNA contributors",y = "Contribution (%)", x = "") +
coord_cartesian(ylim = c(0, 0.4)) +
theme(plot.title = element_text(hjust = 0.5))+
scale_y_continuous(expand = c(0, 0))
grafico <- ggplot(miRNA_Dim2[1:20,], aes(y=contrib, x=Y))
grafico + geom_segment(colour="limegreen", aes(x=Y, xend=Y, y=-5,size=1, yend=contrib-1)) +
geom_point( size=6, color="limegreen", fill=alpha("limegreen"), alpha=0.8, shape=21, stroke=2)+
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top miRNA contributors",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30)) +
scale_y_continuous(expand = c(0, 0))
grafico + geom_segment(colour="limegreen", aes(x=Y, xend=Y, y=0,size=1, yend=contrib-1)) +
geom_point( size=6, color="limegreen", fill=alpha("limegreen"), alpha=0.8, shape=21, stroke=2)+
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top miRNA contributors",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30)) +
scale_y_continuous(expand = c(0, 0))
grafico <- ggplot(mRNA_Dim2[1:20,], aes(y=contrib, x=Y))
grafico + geom_segment(colour="steelblue", aes(x=Y, xend=Y, y=-0.5,size=1, yend=contrib-0.01)) +
geom_point( size=6, color="steelblue", fill=alpha("steelblue"), alpha=0.8, shape=21, stroke=2)+
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top mRNA contributors",y = "Contribution (%)", x = "") +
coord_cartesian(ylim = c(0, 0.4)) +
theme(plot.title = element_text(hjust = 0.5))
grafico <- ggplot(miRNA_Dim2[1:20,], aes(y=contrib, x=Y))
grafico + geom_segment(colour="limegreen", aes(x=Y, xend=Y, y=-5,size=1, yend=contrib-1)) +
geom_point( size=6, color="limegreen", fill=alpha("limegreen"), alpha=0.8, shape=21, stroke=2)+
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top miRNA contributors",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
# contrib vs coordinates vs correlations
ppp <- ggplot(var_Dim2_annot, aes(log2(abs(var_Dim2_annot$Dim2)), log2(var_Dim2_annot$contrib)))
ppp + geom_point(aes(colour = var_Dim2_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "log2(Dim2 contribution)", x = "log2(abs(Dim2 coordinates(scores)))")
ppp <- ggplot(var_Dim2_annot, aes(log2(var_Dim2_annot$contrib), var_Dim2_annot$correlation))
ppp + geom_point(aes(colour = var_Dim2_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "Dim2 correlation", x = "log2(var_Dim2$contrib)")
ppp + geom_point(aes(colour = c(rep("mRNA", 15445), rep("miRNA", 212), rep("metabolome", 798)), size = 0.1, alpha = 0.5)) +
labs (y = "Dim2 correlation", x = "log2(var_Dim2$contrib)")
ppp + geom_point(aes(colour = var_Dim2_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "Dim2 correlation", x = "log2(var_Dim2$contrib)")
var_Dim2_annot <- cbind(todo_annot[match(row.names(var_Dim2), todo_annot$X),], var_Dim2)
var_Dim2_annot$type <- c(rep("mRNA", 15445), rep("miRNA", 212), rep("metabolome", 798))
write.csv(var_Dim2_annot, "variables_dimension2.csv", row.names = FALSE)
# contrib vs coordinates vs correlations
ppp <- ggplot(var_Dim2_annot, aes(log2(abs(var_Dim2_annot$Dim2)), log2(var_Dim2_annot$contrib)))
ppp + geom_point(aes(colour = var_Dim2_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "log2(Dim2 contribution)", x = "log2(abs(Dim2 coordinates(scores)))")
ppp <- ggplot(var_Dim2_annot, aes(log2(var_Dim2_annot$contrib), var_Dim2_annot$correlation))
ppp + geom_point(aes(colour = var_Dim2_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "Dim2 correlation", x = "log2(var_Dim2$contrib)")
var_Dim2_annot$Y <- as.character(var_Dim2_annot$Y)
var_Dim2_annot$Y[is.na(var_Dim2_annot$Y)] <- as.character(var_Dim2_annot$X[is.na(var_Dim2_annot$Y)])
var_Dim2_annot <- var_Dim2_annot[order(var_Dim2_annot$contrib, decreasing = TRUE),]
var_Dim2_annot$Y <- factor(var_Dim2_annot$Y ,levels = unique(var_Dim2_annot$Y))
### Inspect top key variables
grafico <- ggplot(var_Dim2_annot[1:20,], aes(y=contrib, x=Y, fill=var_Dim2_annot$type[1:20]))
grafico + geom_segment(aes(colour=var_Dim2_annot$type[1:20], x=Y, xend=Y, y=0,size=1, yend=contrib-0.01)) +
geom_point( aes(colour=var_Dim2_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(expand = c(0, 0))
grafico + geom_segment(aes(colour=var_Dim2_annot$type[1:20], x=Y, xend=Y, y=0,size=1, yend=contrib-0.01)) +
geom_point( aes(colour=var_Dim2_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
grafico + geom_segment(aes(colour=var_Dim2_annot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=contrib-0.01)) +
geom_point( aes(colour=var_Dim2_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
grafico + geom_segment(aes(colour=var_Dim2_annot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=contrib-0.1)) +
geom_point( aes(colour=var_Dim2_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
grafico + geom_segment(aes(colour=var_Dim2_annot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=contrib-1)) +
geom_point( aes(colour=var_Dim2_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
annot_enrichmnt <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/annot_enrichmnt.csv")
View(annot_enrichmnt)
library(readxl)
newids <- read_excel("C:/Users/Aitor/Downloads/newids.xlsx")
View(newids)
table(is.na(newids$`KEGGS ID`))
library("biomaRt")
## Anotate results table with GENE SYMBOL, chromosome, etc.
listEnsembl(GRCh=37)
listEnsembl(version=91)
ensembl = useMart("ensembl")
# ensembl <- useEnsembl(biomart = "ensembl", dataset = "hsapiens_gene_ensembl", mirror = "useast")
ensembl = useDataset("hsapiens_gene_ensembl",mart=ensembl)
attributes <- listAttributes(ensembl)
todo_genes <- getBM(attributes=c('ensembl_gene_id', "ensembl_transcript_id", 'mirbase_id'), mart=ensembl)
cleaned_norm_count_annot <- cbind(todo_genes[match(row.names(cleaned_norm_count), todo_genes$mirbase_id),], cleaned_norm_count)
View(attributes)
todo_genes <- getBM(attributes=c('ensembl_gene_id', "kegg_enzyme", 'mirbase_id'), mart=ensembl)
View(todo_genes)
View(todo_genes)
View(annot_enrichmnt)
View(attributes)
todo_genes <- getBM(attributes=c('ensembl_gene_id', "reactome_gene", 'mirbase_id'), mart=ensembl)
View(todo_genes)
source("https://bioconductor.org/biocLite.R")
BiocManager::install("MetaboSignal")
library("devtools", lib.loc="~/R/win-library/3.6")
if (!require(ReactomeGSA)) {
install_github("reactome/ReactomeGSA")
}
if (!require(ReactomeGSA)) {
install_github("reactome/ReactomeGSA")
}
BiocManager::install("fgsea")
BiocManager::install("fgsea")
library("fgsea")
data(examplePathways)
length(examplePathways)
examplePathways[1]
class(examplePathways[1])
data(exampleRanks)
head(exampleRanks)
length(exampleRanks)
fgseaRes <- fgsea(pathways = examplePathways, stats = exampleRanks, minSize=15, maxSize=500, nperm=100000)
View(fgseaRes)
sum(fgseaRes[, padj < 0.01])
plotEnrichment(examplePathways[[head(fgseaRes[order(pval), ], 1)$pathway]],
exampleRanks) + labs(title=head(fgseaRes[order(pval), ], 1)$pathway)
plotEnrichment(examplePathways[[head(fgseaRes[order(pval), ], 1)$pathway]],exampleRanks) + labs(title=head(fgseaRes[order(pval), ], 1)$pathway)
library("ggplot2", lib.loc="~/R/win-library/3.6")
plotEnrichment(examplePathways[[head(fgseaRes[order(pval), ], 1)$pathway]],exampleRanks) + labs(title=head(fgseaRes[order(pval), ], 1)$pathway)
BiocManager::install("reactome.db")
BiocManager::install("reactome.db")
BiocManager::install("AnnotationDbi")
install.packages("digest")
BiocManager::install("reactome.db")
ls("package:reactome.db")
library("reactome.db", lib.loc="~/R/win-library/3.6")
ls("package:reactome.db")
my_pathways <- reactomePathways(names(exampleRanks))
annot_enrichmnt <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/annot_enrichmnt.csv")
View(annot_enrichmnt)
logFC_8h_24h <- read.csv("C:/Users/Aitor/Desktop/Grecia/Paintomics/Our data/logFC_8h_24h.csv")
View(logFC_8h_24h)
probandouuuuu <- merge(annot_enrichmnt, logFC_8h_24h, by.x=3, by.y=1 )
View(probandouuuuu)
ppp <- ggplot(probandouuuuu, aes(probandouuuuu$contrib, probandouuuuu$log2FC_24))
library("ggplot2", lib.loc="~/R/win-library/3.6")
ppp <- ggplot(probandouuuuu, aes(probandouuuuu$contrib, probandouuuuu$log2FC_24))
ppp + geom_point(aes(colour = probandouuuuu$type, size = 0.1, alpha = 0.5)) +
labs (y = "log2FC_24", x = "contrib")
library(FactoMineR)
library(ggplot2)
library(pheatmap)
library(ggrepel)
library(factoextra)
library(RCurl)
mfa_data <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/mfa_data.csv")
View(mfa_data)
row.names(mfa_data) <- mfa_data$X
mfa_data <- mfa_data[,-1]
res <- MFA(mfa_data, group=c(500, 212, 798), type=c(rep("c",3)), ncp=5, name.group=c("mRNA","miRNA","metabolome"))
res <- MFA(mfa_data, group=c(1000, 212, 798), type=c(rep("c",3)), ncp=5, name.group=c("mRNA","miRNA","metabolome"))
### Barplot of variance explained by each dimension
eig <- as.data.frame(res$eig)
variances <- barplot(eig$`percentage of variance`, names.arg=1:nrow(eig),main = "Variance explained by dimension", xlab = "Dimensions",ylab = "Percentage of variance", col ="steelblue")
lines(x = variances, eig$`percentage of variance`, type="b", pch=19, col = "red")
### each "layer" contribution to the different components
contrib <- res$group$contrib
my_palette <- colorRampPalette(c("white", "steelblue", "navy", "black", "black"))(n = 500)
myBreaks <- c(seq(0, 100, length.out=ceiling(500) + 1))
pheatmap(contrib, cluster_cols=FALSE,show_rownames = TRUE,breaks = myBreaks, color = my_palette, legend = TRUE, border_color = 1, fontsize_col = 16, fontsize_row = 16)
### Graph of the groups
group_coord <- as.data.frame(res$group$coord)
ggplot(group_coord , aes(Dim.1, Dim.2, col= c("mRNA", "miRNA", "metabolome"))) + geom_point(aes(size=5)) + geom_text(aes(size=50,label = row.names(group_coord), vjust="inward",hjust="inward"), nudge_y = 0.01, parse = TRUE) +
labs (y = "Dim2 (26%)", x = "Dim1 (34%)") +
theme_light()
fviz_mfa_axes(res)
### Graph of the individuals
fviz_mfa_ind(res, col.ind = "cos2",  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE)
fviz_mfa_ind(res, partial = "all", repel = TRUE)
# better looking individuals graph with ggplot2
ind_coord <- as.data.frame(res$ind$coord)
ggplot(ind_coord , aes(Dim.1, Dim.2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text_repel(aes(label = row.names(ind_coord)), nudge_y = 0.25, fontface = "bold") +
labs (y = "Dim2 (26%)", x = "Dim1 (34%)") +
theme_light()
# confidence ellipse (90%) + center
ggplot(ind_coord , aes(Dim.1, Dim.2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (26%)", x = "Dim1 (34%)") +
theme_light()
# confidence ellipse (90%) + center
ggplot(ind_coord , aes(Dim.1, Dim.3, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (26%)", x = "Dim1 (34%)") +
theme_light()
# confidence ellipse (90%) + center
ggplot(ind_coord , aes(Dim.4, Dim.3, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (26%)", x = "Dim1 (34%)") +
theme_light()
View(variances)
View(eig)
ggplot(ind_coord , aes(Dim.1, Dim.3, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim3 (16%)", x = "Dim1 (33%)") +
theme_light()
mfa_checking <- as.data.frame(t(mfa_data))
View(mfa_checking)
ooo <- rowMeans(mfa_checking[,1:5], na.rm = T) - rowMeans(mfa_checking[,6:10], na.rm = T)
ooo <- rowMeans(mfa_checking[,6:10], na.rm = T) - rowMeans(mfa_checking[,1:5], na.rm = T)
### Inspect variables relation with MFA dimensions
# Focus in dimension 2 (this dimension kind of separates individuals by biological group)
coord_var <- as.data.frame(res$quanti.var$coord)
contrib_var <- as.data.frame(res$quanti.var$contrib)
cor_var <- as.data.frame(res$quanti.var$cor)
var_Dim3 <- as.data.frame(cbind(coord_var$Dim.3, contrib_var$Dim.3 , cor_var$Dim.3))
var_Dim1 <- as.data.frame(cbind(coord_var$Dim.1, contrib_var$Dim.1 , cor_var$Dim.1))
var_Dim2 <- as.data.frame(cbind(coord_var$Dim.2, contrib_var$Dim.2 , cor_var$Dim.2))
colnames(var_Dim2) <- c("Dim2", "contrib", "correlation")
colnames(var_Dim1) <- c("Dim1", "contrib", "correlation")
colnames(var_Dim3) <- c("Dim3", "contrib", "correlation")
row.names(var_Dim2) <- row.names(coord_var)
row.names(var_Dim1) <- row.names(coord_var)
row.names(var_Dim3) <- row.names(coord_var)
# annotate (there is duplicate names for some variables)
#load annotation file
todo_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/todo_annot.csv"), row.names=1, header=T, na.strings=c("","NA"))
var_Dim2_annot <- cbind(todo_annot[match(row.names(var_Dim2), todo_annot$X),], var_Dim2)
var_Dim2_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim1_annot <- cbind(todo_annot[match(row.names(var_Dim1), todo_annot$X),], var_Dim1)
var_Dim3_annot <- cbind(todo_annot[match(row.names(var_Dim3), todo_annot$X),], var_Dim3)
var_Dim1_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim3_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
View(var_Dim1_annot)
var_Dim1_annot$FC <- ooo
var_Dim2_annot$FC <- ooo
var_Dim3_annot$FC <- ooo
View(todo_annot)
todo_annot$X <- gsub("-", ".", todo_annot$X)
var_Dim2_annot <- cbind(todo_annot[match(row.names(var_Dim2), todo_annot$X),], var_Dim2)
View(var_Dim2_annot)
var_Dim2_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim3_annot <- cbind(todo_annot[match(row.names(var_Dim3), todo_annot$X),], var_Dim3)
var_Dim1_annot <- cbind(todo_annot[match(row.names(var_Dim1), todo_annot$X),], var_Dim1)
var_Dim1_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim3_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim1_annot$FC <- ooo
var_Dim2_annot$FC <- ooo
var_Dim3_annot$FC <- ooo
View(var_Dim1_annot)
View(var_Dim3_annot)
ppp <- ggplot(var_Dim1_annot, aes(log2(abs(var_Dim1_annot$contrib)), log2(var_Dim1_annot$FC)))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "contribution")
ppp <- ggplot(var_Dim1_annot, aes(var_Dim1_annot$contrib, var_Dim1_annot$FC))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "contribution")
ppp <- ggplot(var_Dim1_annot, aes(log2(var_Dim1_annot$contrib), var_Dim1_annot$FC))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "contribution")
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "log2(contribution)")
ppp <- ggplot(var_Dim2_annot, aes(log2(var_Dim2_annot$contrib), var_Dim2_annot$FC))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "log2(contribution)")
ppp <- ggplot(var_Dim3_annot, aes(log2(var_Dim3_annot$contrib), var_Dim3_annot$FC))
ppp + geom_point(aes(colour = var_Dim3_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "log2(contribution)")
var_Dim3_annot$Y <- as.character(var_Dim3_annot$Y)
var_Dim3_annot$Y[is.na(var_Dim3_annot$Y)] <- as.character(var_Dim3_annot$X[is.na(var_Dim3_annot$Y)])
var_Dim3_annot <- var_Dim3_annot[order(var_Dim3_annot$contrib, decreasing = TRUE),]
var_Dim3_annot$Y <- factor(var_Dim3_annot$Y ,levels = unique(var_Dim3_annot$Y))
### Inspect top key variables
grafico <- ggplot(var_Dim3_annot[1:20,], aes(y=contrib, x=Y, fill=var_Dim3_annot$type[1:20]))
grafico + geom_segment(aes(colour=var_Dim3_annot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=contrib-1)) +
geom_point( aes(colour=var_Dim3_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
View(var_Dim3_annot)
BiocManager::install("mixOmics")
### mixOmics - DIABLO
library(mixOmics)
data(breast.TCGA)
mrna <- breast.TCGA$data.train$mrna
protein <- breast.TCGA$data.train$protein)
protein <- breast.TCGA$data.train$protein
View(protein)
View(mrna)
mfa_data <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/mfa_data.csv")
View(mfa_data)
Y <- breast.TCGA$data.train$subtype
Y
View(mfa_data)
###
mfa_data <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/mfa_data.csv", row.names = 1)
View(mfa_data)
mRNA <- mfa_data[,1:1000]
miRNA <-  mfa_data[,1001:1212]
metabolomics <- mfa_data[,1213:2010]
View(metabolomics)
View(miRNA)
Y <- as.factor(rep("DMSO", 5), rep("MKC", 5))
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
Y
summary(Y)
X <- list(mRNA = mfa_data[,1:1000],
miRNA = mfa_data[,1001:1212],
metabolomics = mfa_data[,1213:2010])
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
MyResult.diablo <- block.splsda(X, Y)
plotIndiv(MyResult.diablo)
plotVar(MyResult.diablo)
circosPlot(MyResult.diablo, cutoff=0.9)
MyResult.diablo$call
uuu <- MyResult.diablo$ind.mat
View(uuu)
uuu <- MyResult.diablo$ncomp
MyResult.diablo$variates
head(MyResult.diablo$loadings)
ooo <- MyResult.diablo$loadings
uuu <- ooo$metabolomics
View(uuu)
### mixOmics - DIABLO
library(mixOmics)
setwd("~/GitHub/MFA_Omics_Integration/data")
###
# load data
mfa_data <- read.csv("~/GitHub/MFA_Omics_Integration/data/log2_mfa_data.csv", row.names = 1)
15445+212
15657+798
# specify each block of data
X <- list(mRNA = mfa_data[,1:15445],
miRNA = mfa_data[,15446:15657],
metabolomics = mfa_data[,15658:16455])
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
MyResult.diablo <- block.splsda(X, Y)
plotIndiv(MyResult.diablo)
plotIndiv(MyResult.diablo, ellipse = T)
MyResult.diablo$design
MyDesign <- matrix(c(0, 0.5, 0.5,
0.5, 0, 0.5,
0.5, 0.5, 0),
byrow=TRUE,
ncol = length(X), nrow = length(X),
dimnames = list(names(X), names(X)))
MyResult.diablo <- block.splsda(X, Y, design = MyDesign)
plotIndiv(MyResult.diablo)
MyDesign <- matrix(c(0, 0, 0,
0, 0, 0,
0, 0, 0),
byrow=TRUE,
ncol = length(X), nrow = length(X),
dimnames = list(names(X), names(X)))
MyResult.diablo <- block.splsda(X, Y, design = MyDesign)
plotIndiv(MyResult.diablo)
plotIndiv(MyResult.diablo, ellipse = T)
MyResult.diablo$keepX
MyResult.diablo$ind.mat
MyResult.diablo$explained_variance
MyResult.diablo$AVE
MyResult.diablo$crit
MyResult.diablo$init
MyResult.diablo$weights
MyResult.diablo$explained_variance
MyResult.diablo$indY
MyResult.diablo$scheme
MyResult.diablo$design
MyResult.diablo$loadings
plotDiablo(MyResult.diablo, ncomp = 1)
plotDiablo(MyResult.diablo, ncomp = 2)
plotLoadings(MyResult.diablo, comp = 1, contrib = "max")
probando <- MyResult.diablo$loadings$Y
View(probando)
var_mrna <- MyResult.diablo$variates$mRNA
load_mrna <- MyResult.diablo$loadings$mRNA
View(var_mrna)
var_mrna <- MyResult.diablo$variates$Y
View(var_mrna)
var_mrna <- MyResult.diablo$crit
View(var_mrna)
MyResult.diablo$weights
View(load_mrna)
load_mRNA <- MyResult.diablo$loadings$mRNA
load_miRNA <- MyResult.diablo$loadings$miRNA
load_metab <- MyResult.diablo$loadings$metabolomics
load_all <- rbind(load_mRNA, load_miRNA, load_metab)
View(load_all)
sum(load_mRNA)
load_mRNA <- as.data.frame(MyResult.diablo$loadings$mRNA)
load_miRNA <- as.data.frame(MyResult.diablo$loadings$miRNA)
load_metab <- as.data.frame(MyResult.diablo$loadings$metabolomics)
load_all <- rbind(load_mRNA, load_miRNA, load_metab)
sum(as.data.frame(load_mRNA$comp1))
sum(as.data.frame(load_miRNA$comp1))
sum(as.data.frame(load_metab$comp1))
View(load_all)
## Download Reactome annotation from Reactome website
## All levels of the pathway hierarchy
# ChEBI to All pathways
# ENSEMBL to All pathways
# miRBase to All pathways
# Paste them together rbind()
library(plyr)
library(fgsea)
library(ggplot2)
library(RCurl)
### data frame with ENSEMBL/CHEBI/miRNA identifiers annotated to reactome pathways
### split into 1 list of IDs/pathway
Reactome_all <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/Reactome_all.csv"), stringsAsFactors=FALSE)
Reactome_all <- Reactome_all[order(Reactome_all$pathway),]
#count numer of elements/pathway
counts <- as.data.frame(table(Reactome_all$pathway))
magic_number <- length(unique(counts$Var1))
breaks <- rep(1:magic_number, counts$Freq)
# break IDs into pathways, rename each list accordingly
lista1 <- split(Reactome_all$ID, breaks)
names(lista1) <- unique(counts$Var1)
# save for later
anotacion <- as.data.frame(unique(Reactome_all[,2:3]))
### Perform GSEA with these lists on our preranked list of IDs
var_dim2_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/var_dim2_annot.csv"))
View(var_dim2_annot)
View(load_all)
View(anotacion)
View(var_dim2_annot)
var_annot <- var_dim2_annot[,c(1,2,6,7)]
View(var_annot)
var_annot$X <- gsub("-", ".", var_annot$X)
View(load_all)
View(var_annot)
load_all_annot <- cbind(var_annot[match(row.names(load_all), var_annot$X),], load_all)
View(load_all_annot)
View(load_all)
ranking <- load_all_annot[,c(4,5)]
ranking <- ranking[!is.na(ranking$REACTOME),]
View(ranking)
# consolidate duplicated IDs, order ranking
ranking <- ddply(ranking,1,numcolwise(mean))
View(ranking)
ranking <- ranking[order(ranking$comp1, decreasing = TRUE),]
ranking_ooo <- ranking$contrib
names(ranking_ooo) <- ranking$REACTOME
View(ranking)
ranking_ooo <- ranking$comp1
names(ranking_ooo) <- ranking$REACTOME
###Perform GSEA with list of reactome pathways
fgseaRes <- fgsea(pathways = lista1,
stats = ranking_ooo,
minSize=15,
maxSize=500,
nperm=100000)
fgseaRes_annot <- merge(anotacion, fgseaRes, by.x = 1, by.y = 1)
View(fgseaRes_annot)
### plot
plotEnrichment(lista1[[(fgseaRes[832,])$pathway]],ranking_ooo) +
ggtitle("Citric acid cycle (TCA cycle)", size)
### plot
plotEnrichment(lista1[[(fgseaRes[832,])$pathway]],ranking_ooo) +
ggtitle("Citric acid cycle (TCA cycle)")
### plot
plotEnrichment(lista1[[(fgseaRes[447,])$pathway]],ranking_ooo) +
ggtitle("XBP1(S) activates chaperone genes")
### plot
plotEnrichment(lista1[[(fgseaRes[971,])$pathway]],ranking_ooo) +
ggtitle("Triglyceride metabolism")
