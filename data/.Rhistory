View(variances)
View(eig)
ggplot(ind_coord , aes(Dim.1, Dim.3, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim3 (16%)", x = "Dim1 (33%)") +
theme_light()
mfa_checking <- as.data.frame(t(mfa_data))
View(mfa_checking)
ooo <- rowMeans(mfa_checking[,1:5], na.rm = T) - rowMeans(mfa_checking[,6:10], na.rm = T)
ooo <- rowMeans(mfa_checking[,6:10], na.rm = T) - rowMeans(mfa_checking[,1:5], na.rm = T)
### Inspect variables relation with MFA dimensions
# Focus in dimension 2 (this dimension kind of separates individuals by biological group)
coord_var <- as.data.frame(res$quanti.var$coord)
contrib_var <- as.data.frame(res$quanti.var$contrib)
cor_var <- as.data.frame(res$quanti.var$cor)
var_Dim3 <- as.data.frame(cbind(coord_var$Dim.3, contrib_var$Dim.3 , cor_var$Dim.3))
var_Dim1 <- as.data.frame(cbind(coord_var$Dim.1, contrib_var$Dim.1 , cor_var$Dim.1))
var_Dim2 <- as.data.frame(cbind(coord_var$Dim.2, contrib_var$Dim.2 , cor_var$Dim.2))
colnames(var_Dim2) <- c("Dim2", "contrib", "correlation")
colnames(var_Dim1) <- c("Dim1", "contrib", "correlation")
colnames(var_Dim3) <- c("Dim3", "contrib", "correlation")
row.names(var_Dim2) <- row.names(coord_var)
row.names(var_Dim1) <- row.names(coord_var)
row.names(var_Dim3) <- row.names(coord_var)
# annotate (there is duplicate names for some variables)
#load annotation file
todo_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/todo_annot.csv"), row.names=1, header=T, na.strings=c("","NA"))
var_Dim2_annot <- cbind(todo_annot[match(row.names(var_Dim2), todo_annot$X),], var_Dim2)
var_Dim2_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim1_annot <- cbind(todo_annot[match(row.names(var_Dim1), todo_annot$X),], var_Dim1)
var_Dim3_annot <- cbind(todo_annot[match(row.names(var_Dim3), todo_annot$X),], var_Dim3)
var_Dim1_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim3_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
View(var_Dim1_annot)
var_Dim1_annot$FC <- ooo
var_Dim2_annot$FC <- ooo
var_Dim3_annot$FC <- ooo
View(todo_annot)
todo_annot$X <- gsub("-", ".", todo_annot$X)
var_Dim2_annot <- cbind(todo_annot[match(row.names(var_Dim2), todo_annot$X),], var_Dim2)
View(var_Dim2_annot)
var_Dim2_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim3_annot <- cbind(todo_annot[match(row.names(var_Dim3), todo_annot$X),], var_Dim3)
var_Dim1_annot <- cbind(todo_annot[match(row.names(var_Dim1), todo_annot$X),], var_Dim1)
var_Dim1_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim3_annot$type <- c(rep("mRNA", 1000), rep("miRNA", 212), rep("metabolome", 798))
var_Dim1_annot$FC <- ooo
var_Dim2_annot$FC <- ooo
var_Dim3_annot$FC <- ooo
View(var_Dim1_annot)
View(var_Dim3_annot)
ppp <- ggplot(var_Dim1_annot, aes(log2(abs(var_Dim1_annot$contrib)), log2(var_Dim1_annot$FC)))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "contribution")
ppp <- ggplot(var_Dim1_annot, aes(var_Dim1_annot$contrib, var_Dim1_annot$FC))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "contribution")
ppp <- ggplot(var_Dim1_annot, aes(log2(var_Dim1_annot$contrib), var_Dim1_annot$FC))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "contribution")
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "log2(contribution)")
ppp <- ggplot(var_Dim2_annot, aes(log2(var_Dim2_annot$contrib), var_Dim2_annot$FC))
ppp + geom_point(aes(colour = var_Dim1_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "log2(contribution)")
ppp <- ggplot(var_Dim3_annot, aes(log2(var_Dim3_annot$contrib), var_Dim3_annot$FC))
ppp + geom_point(aes(colour = var_Dim3_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FC", x = "log2(contribution)")
var_Dim3_annot$Y <- as.character(var_Dim3_annot$Y)
var_Dim3_annot$Y[is.na(var_Dim3_annot$Y)] <- as.character(var_Dim3_annot$X[is.na(var_Dim3_annot$Y)])
var_Dim3_annot <- var_Dim3_annot[order(var_Dim3_annot$contrib, decreasing = TRUE),]
var_Dim3_annot$Y <- factor(var_Dim3_annot$Y ,levels = unique(var_Dim3_annot$Y))
### Inspect top key variables
grafico <- ggplot(var_Dim3_annot[1:20,], aes(y=contrib, x=Y, fill=var_Dim3_annot$type[1:20]))
grafico + geom_segment(aes(colour=var_Dim3_annot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=contrib-1)) +
geom_point( aes(colour=var_Dim3_annot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0, 30))
View(var_Dim3_annot)
BiocManager::install("mixOmics")
### mixOmics - DIABLO
library(mixOmics)
data(breast.TCGA)
mrna <- breast.TCGA$data.train$mrna
protein <- breast.TCGA$data.train$protein)
protein <- breast.TCGA$data.train$protein
View(protein)
View(mrna)
mfa_data <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/mfa_data.csv")
View(mfa_data)
Y <- breast.TCGA$data.train$subtype
Y
View(mfa_data)
###
mfa_data <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/mfa_data.csv", row.names = 1)
View(mfa_data)
mRNA <- mfa_data[,1:1000]
miRNA <-  mfa_data[,1001:1212]
metabolomics <- mfa_data[,1213:2010]
View(metabolomics)
View(miRNA)
Y <- as.factor(rep("DMSO", 5), rep("MKC", 5))
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
Y
summary(Y)
X <- list(mRNA = mfa_data[,1:1000],
miRNA = mfa_data[,1001:1212],
metabolomics = mfa_data[,1213:2010])
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
MyResult.diablo <- block.splsda(X, Y)
plotIndiv(MyResult.diablo)
plotVar(MyResult.diablo)
circosPlot(MyResult.diablo, cutoff=0.9)
MyResult.diablo$call
uuu <- MyResult.diablo$ind.mat
View(uuu)
uuu <- MyResult.diablo$ncomp
MyResult.diablo$variates
head(MyResult.diablo$loadings)
ooo <- MyResult.diablo$loadings
uuu <- ooo$metabolomics
View(uuu)
### mixOmics - DIABLO
library(mixOmics)
###
# load data
mfa_data <- read.csv("~/GitHub/MFA_Omics_Integration/data/log2_mfa_data.csv", row.names = 1)
# specify each block of data
X <- list(mRNA = mfa_data[,1:15445],
miRNA = mfa_data[,15446:15657],
metabolomics = mfa_data[,15658:16455])
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
# retain only top variables from each layer
list.keepX <- list(mRNA = c(20, 20), miRNA = c(5,5), metabolomics = c(10, 10))
MyResult.diablo <- block.splsda(X, Y, keepX = list.keepX)
plotIndiv(MyResult.diablo) ## sample plot
plotVar(MyResult.diablo) ## variable plot
cimDiablo(MyResult.diablo, row.names = FALSE, col.names = FALSE)
cimDiablo(MyResult.diablo, row.names = FALSE, col.names = FALSE)
cimDiablo(MyResult.diablo, margins = c(2, 15), row.names = FALSE, col.names = FALSE)
?cim
cimDiablo(MyResult.diablo, margins = c(0, 0), row.names = FALSE, col.names = FALSE)
cimDiablo(MyResult.diablo, margins = c(0, 0,0,0), row.names = FALSE, col.names = FALSE)
cimDiablo(MyResult.diablo, margins = c(0, 0), row.names = FALSE, col.names = FALSE)
load_mRNA <- as.data.frame(MyResult.diablo$loadings$mRNA)
load_miRNA <- as.data.frame(MyResult.diablo$loadings$miRNA)
load_metab <- as.data.frame(MyResult.diablo$loadings$metabolomics)
load_all <- rbind(load_mRNA, load_miRNA, load_metab)
View(load_all)
circosPlot(MyResult.diablo, cutoff=0.7)
MyResult.diablo$weights
MyResult.diablo$names$blocks
MyResult.diablo$crit
uuu <- MyResult.diablo$crit
View(uuu)
circosPlot(MyResult.diablo, cutoff=0.9)
### run Diablo with selected contrast design
MyDesign <- matrix(c(0, 0, 0,
0, 0, 0,
0, 0, 0),
byrow=TRUE,
ncol = length(X), nrow = length(X),
dimnames = list(names(X), names(X)))
MyResult.diablo <- block.splsda(X, Y, design = MyDesign)
# individuals in each layer plotted in DIABLO components.
plotIndiv(MyResult.diablo)
MyResult.diablo$variates$mRNA
ind_coord <- as.data.frame(MyResult.diablo$variates$Y)
View(ind_coord)
ind_coord <- as.data.frame(MyResult.diablo$variates$Y)
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text_repel(aes(label = row.names(ind_coord)), nudge_y = 0.25, fontface = "bold") +
labs (y = "comp2 (within group variation)", x = "comp1 (between group variation)") +
theme_light()
library(ggrepel)
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text_repel(aes(label = row.names(ind_coord)), nudge_y = 0.25, fontface = "bold") +
labs (y = "comp2 (within group variation)", x = "comp1 (between group variation)") +
theme_light()
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text(aes(label = row.names(ind_coord)), nudge_y = 0.25, fontface = "bold") +
labs (y = "comp2 (within group variation)", x = "comp1 (between group variation)") +
theme_light()
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (26%)", x = "Dim1 (34%)") +
theme_light()
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3)
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text_repel(aes(label = row.names(ind_coord)), nudge_y = 0.25, fontface = "bold") +
labs (y = "comp2 (within group variation)", x = "comp1 (between group variation)") +
theme_light()
ggplot(ind_coord , aes(comp1, comp2, col= c(rep("DMSO", 5), rep("MKC", 5)))) +
geom_point(aes(size=2)) +
geom_text(aes(label = row.names(ind_coord)), nudge_y = 0.25, fontface = "bold") +
labs (y = "comp2 (within group variation)", x = "comp1 (between group variation)") +
theme_light()
MyResult.diablo$weights
plotLoadings(MyResult.diablo)
plotLoadings(MyResult.diablo, comp = 1, contrib = "max")
# inspect loadings on comp1
load_mRNA <- as.data.frame(MyResult.diablo$loadings$mRNA)
load_miRNA <- as.data.frame(MyResult.diablo$loadings$miRNA)
load_metab <- as.data.frame(MyResult.diablo$loadings$metabolomics)
load_all <- rbind(load_mRNA, load_miRNA, load_metab)
var_dim2_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/var_dim2_annot.csv"))
var_annot <- var_dim2_annot[,c(1,2,6,7)]
var_annot$X <- gsub("-", ".", var_annot$X)
# inspect loadings on comp1
load_mRNA <- as.data.frame(MyResult.diablo$loadings$mRNA)
load_miRNA <- as.data.frame(MyResult.diablo$loadings$miRNA)
load_metab <- as.data.frame(MyResult.diablo$loadings$metabolomics)
load_all <- rbind(load_mRNA, load_miRNA, load_metab)
var_dim2_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/var_dim2_annot.csv"))
library(RCurl)
# annotate
var_dim2_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/var_dim2_annot.csv"))
var_annot <- var_dim2_annot[,c(1,2,6,7)]
var_annot$X <- gsub("-", ".", var_annot$X)
load_all_annot <- cbind(var_annot[match(row.names(load_all), var_annot$X),], load_all)
View(load_all_annot)
MyResult.diablo$weights
class(MyResult.diablo$weights)
# each "layer" contribution to the different components
barplot(MyResult.diablo$weights, names.arg= names(MyResult.diablo$weights),main = "Variance explained by dimension", xlab = "Dimensions",ylab = "Percentage of variance", col ="steelblue")
# each "layer" contribution to the different components
barplot(MyResult.diablo$weights, names.arg= names(MyResult.diablo$weights),main = "Contribution of each layer to comp1", xlab = "",ylab = "loading weight", col ="steelblue")
table(is.na(load_all_annot$Y))
# Inspect variables weight in DIABLO component1
load_all_annot_plot <- load_all_annot[order(abs(load_all_annot$comp1), decreasing = TRUE),]
View(load_all_annot_plot)
grafico <- ggplot(load_all_annot_plot[1:20,], aes(y=comp1, x=Y, fill=load_all_annot_plot$type[1:20]))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=contrib-1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=comp1-1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5))
# Inspect variables weight in DIABLO component1
load_all_annot_plot <- load_all_annot[order(abs(load_all_annot$comp1), decreasing = TRUE),]
load_all_annot_plot$Y <- factor(load_all_annot_plot$Y ,levels = unique(load_all_annot_plot$Y))
grafico <- ggplot(load_all_annot_plot[1:20,], aes(y=comp1, x=Y, fill=load_all_annot_plot$type[1:20]))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=comp1-1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=-5,size=1, yend=comp1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=0,size=1, yend=comp1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to Dimension2",y = "Contribution (%)", x = "") +
theme(plot.title = element_text(hjust = 0.5))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=0,size=1, yend=comp1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to comp1",y = "loadings", x = "") +
theme(plot.title = element_text(hjust = 0.5))
# each "layer" contribution to the different components
barplot(MyResult.diablo$weights, names.arg= names(MyResult.diablo$weights),main = "Contribution of each layer to comp1", xlab = "",ylab = "loading weight", col ="steelblue")
?network
View(load_all_annot_plot)
View(load_all_annot)
probando <- as.data.frame(t(mfa_data))
FoldChanges <- rowMeans(mfa_data[,1:5], na.rm = T)
###
# load data
mfa_data <- read.csv("~/GitHub/MFA_Omics_Integration/data/log2_mfa_data.csv", row.names = 1)
dim(mfa_data)
FoldChanges <- colMeans(mfa_data[1:5,], na.rm = T)
FoldChanges <-  colMeans(mfa_data[6:10,], na.rm = T) - colMeans(mfa_data[1:5,], na.rm = T)
FoldChanges[1:5]
load_all_annot$FoldChanges <- FoldChanges
miRNA_data <- mfa_data[,15446:15657]
View(miRNA_data)
class(miRNA_data$hsa.let.7a.5p)
FoldChanges <-  colMeans(miRNA_data[6:10,], na.rm = T) - colMeans(miRNA_data[1:5,], na.rm = T)
FoldChanges[1:5]
FoldChanges <-  colMeans(miRNA_data[6:10,]) - colMeans(miRNA_data[1:5,])
FoldChanges[1:5]
mfa_data[,15446:15657] <- log2(mfa_data[,15446:15657])
setwd("~/GitHub/MFA_Omics_Integration/data")
head(mfa_data)
write.csv(mfa_data, "log2_mfa_data.csv")
###
# load data
mfa_data <- read.csv("~/GitHub/MFA_Omics_Integration/data/log2_mfa_data.csv", row.names = 1)
# specify each block of data
X <- list(mRNA = mfa_data[,1:15445],
miRNA = mfa_data[,15446:15657],
metabolomics = mfa_data[,15658:16455])
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
### run Diablo with selected contrast design
MyDesign <- matrix(c(0, 0, 0,
0, 0, 0,
0, 0, 0),
byrow=TRUE,
ncol = length(X), nrow = length(X),
dimnames = list(names(X), names(X)))
MyResult.diablo <- block.splsda(X, Y, design = MyDesign)
# individuals in each layer plotted in DIABLO components.
plotIndiv(MyResult.diablo)
# global overview of the correlation structure at the component level
plotDiablo(MyResult.diablo, ncomp = 1)
# each "layer" contribution to the different components
barplot(MyResult.diablo$weights, names.arg= names(MyResult.diablo$weights),main = "Contribution of each layer to comp1", xlab = "",ylab = "loading weight", col ="steelblue")
mfa_data[,15446:15657] <- log2(mfa_data[,15446:15657])
# specify each block of data
X <- list(mRNA = mfa_data[,1:15445],
miRNA = mfa_data[,15446:15657],
metabolomics = mfa_data[,15658:16455])
Y <- as.factor(c(rep("DMSO", 5), rep("MKC", 5)))
### run Diablo with selected contrast design
MyDesign <- matrix(c(0, 0, 0,
0, 0, 0,
0, 0, 0),
byrow=TRUE,
ncol = length(X), nrow = length(X),
dimnames = list(names(X), names(X)))
MyResult.diablo <- block.splsda(X, Y, design = MyDesign)
# individuals in each layer plotted in DIABLO components.
plotIndiv(MyResult.diablo)
# global overview of the correlation structure at the component level
plotDiablo(MyResult.diablo, ncomp = 1)
# each "layer" contribution to the different components
barplot(MyResult.diablo$weights, names.arg= names(MyResult.diablo$weights),main = "Contribution of each layer to comp1", xlab = "",ylab = "loading weight", col ="steelblue")
# inspect loadings on comp1
load_mRNA <- as.data.frame(MyResult.diablo$loadings$mRNA)
load_miRNA <- as.data.frame(MyResult.diablo$loadings$miRNA)
load_metab <- as.data.frame(MyResult.diablo$loadings$metabolomics)
load_all <- rbind(load_mRNA, load_miRNA, load_metab)
# annotate
var_dim2_annot <- read.csv(text = getURL("https://raw.githubusercontent.com/xaitorx/MFA_Omics_Integration/v1/data/var_dim2_annot.csv"))
var_annot <- var_dim2_annot[,c(1,2,6,7)]
var_annot$X <- gsub("-", ".", var_annot$X)
load_all_annot <- cbind(var_annot[match(row.names(load_all), var_annot$X),], load_all)
# Inspect variables weight in DIABLO component1
load_all_annot_plot <- load_all_annot[order(abs(load_all_annot$comp1), decreasing = TRUE),]
load_all_annot_plot$Y <- factor(load_all_annot_plot$Y ,levels = unique(load_all_annot_plot$Y))
grafico <- ggplot(load_all_annot_plot[1:20,], aes(y=comp1, x=Y, fill=load_all_annot_plot$type[1:20]))
grafico + geom_segment(aes(colour=load_all_annot_plot$type[1:20], x=Y, xend=Y, y=0,size=1, yend=comp1)) +
geom_point( aes(colour=load_all_annot_plot$type[1:20]), size=6, alpha=0.8, shape=21, stroke=2) +
theme_classic() +
theme(plot.margin = margin(1.5, 1.5, 1.5, 1.5, "cm") ,axis.text.x = element_text(angle = 45, hjust = 1)) +
labs (title= "Top contributors to comp1",y = "loadings", x = "") +
theme(plot.title = element_text(hjust = 0.5))
#
FoldChanges <-  colMeans(mfa_data[6:10,], na.rm = T) - colMeans(mfa_data[1:5,], na.rm = T)
load_all_annot$FoldChanges <- FoldChanges
View(load_all_annot)
# compare loadings vs FC
ppp <- ggplot(load_all_annot, aes(load_all_annot$comp1, load_all_annot$FoldChanges))
ppp + geom_point(aes(colour = load_all_annot$type, size = 0.1, alpha = 0.5)) +
labs (y = "FoldChanges", x = "comp1")
BiocManager::install("ropls")
mfa_data <- read.csv("~/GitHub/MFA_Omics_Integration/data/log2_mfa_data.csv", row.names = 1)
### PCA
pca <- prcomp(mfa_data, center = T, scale. = T)
### PCA
pca <- prcomp(mfa_data, center = T, scale. = T, na.action = na.omit)
mfa_data_O <- as.data.frame(t(mfa_data))
### PCA
pca <- prcomp(t(log2(mfa_data_O)), center = T, scale. = T)
### PCA
pca <- prcomp(na.omit(mfa_data), center = T, scale. = T)
### PCA
pca <- prcomp(na.omit(mfa_data), center = T)
### PCA
pca <- prcomp(na.omit(mfa_data))
### PCA
data.pca <- opls(mfa_data)
### OPLS - DA
#
library(ropls)
### PCA
data.pca <- opls(mfa_data)
data.pca@pcaVarVn
data.pca@coefficientMN
data.pca@descriptionMC
data.pca@subsetVi
data.pca@typeC
data.pca@coefficientMN
data.pca@vipVn
data.pca@scoreMN
summary(data.pca)
### PCA
data.pca <- opls(mfa_data, predI=10)
PCAi <- as.data.frame(data.pca@scoreMN)
View(PCAi)
data.pca@loadingMN
data.pca@weightMN
data.pca@coefficientMN
data.pca@summaryDF
data.pca@orthoScoreMN
data.pca@weightStarMN
data.pca@pcaVarVn
data.pca@subsetVi
data.pca@vipVn
### PCA
data.pca <- opls(mfa_data, predI=20)
variance <- data.pca@pcaVarVn/sum(data.pca@pcaVarVn)
eig <- data.pca@pcaVarVn/sum(data.pca@pcaVarVn)
variances <- barplot(eig, names.arg=names(eig),main = "Variance explained by dimension", xlab = "Dimensions",ylab = "Percentage of variance", col ="steelblue")
lines(x = variances, eig$`percentage of variance`, type="b", pch=19, col = "red")
lines(x = variances, eig, type="b", pch=19, col = "red")
PCAi <- as.data.frame(data.pca@scoreMN)
View(PCAi)
summary(eig)
eig
View(PCAi)
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = "PC2 (0.23)", x = "PC1 (0.37)") # substitute with % variances
ggplot(PCAi , aes(p1, p2, fill= c(rep("DMSO", 5), rep("MKC", 5)))) + stat_ellipse(geom = "polygon", alpha = 0.5) +
labs (y = "PC2 (0.23)", x = "PC1 (0.37)") # substitute with % variances
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "path", alpha = 0.5, level = 0.9, linetype = 2, size=3) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
mfa_data <- read.csv("C:/Users/Aitor/Desktop/Grecia/MFA/mfa_data.csv", row.names = 1)
### PCA
data.pca <- opls(mfa_data, predI=10)
eig <- data.pca@pcaVarVn/sum(data.pca@pcaVarVn)
variances <- barplot(eig, names.arg=names(eig),main = "Variance explained by dimension", xlab = "Dimensions",ylab = "Percentage of variance", col ="steelblue")
lines(x = variances, eig, type="b", pch=19, col = "red")
eig
PCAi <- as.data.frame(data.pca@scoreMN)
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = "PC2 (0.23)", x = "PC1 (0.37)") # substitute with % variances
mfa_data <- read.csv("~/GitHub/MFA_Omics_Integration/data/log2_mfa_data.csv", row.names = 1)
### PCA
data.pca <- opls(mfa_data, predI=10)
eig <- data.pca@pcaVarVn/sum(data.pca@pcaVarVn)
variances <- barplot(eig, names.arg=names(eig),main = "Variance explained by dimension", xlab = "Dimensions",ylab = "Percentage of variance", col ="steelblue")
lines(x = variances, eig, type="b", pch=19, col = "red")
eig
PCAi <- as.data.frame(data.pca@scoreMN)
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = "PC2 (0.23)", x = "PC1 (0.37)") # substitute with % variances
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.95) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", type = "euclid", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.5) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.5) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.95) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.9) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) +
stat_ellipse(geom = "polygon", aes(fill = c(rep("DMSO", 5), rep("MKC", 5))), alpha = 0.5, level = 0.8) +
geom_text_repel(aes( label = row.names(ind_coord)), nudge_y = 0.25) +
labs (y = "Dim2 (23%)", x = "Dim1 (37%)") +
theme_light()
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = "PC2 (0.23)", x = "PC1 (0.37)") # substitute with % variances
ggplot(PCAi , aes(p1, p2, col= c(rep("DMSO", 5), rep("MKC", 5)))) + geom_point(aes(size=2)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = "PC2 (23%)", x = "PC1 (37%)") + # substitute with % variances
theme_light()
plot(data.pca,
typeVc = "x-score",
parAsColFcVn = c(rep("DMSO", 5), rep("MKC", 5)))
data.oplsda <- opls(dataMatrix, classes,
predI = 1, orthoI = NA)
data.oplsda <- opls(mfa_data, classes,
predI = 1, orthoI = NA)
### OPLS-DA
classes <- c(rep("DMSO", 5), rep("MKC", 5))
data.oplsda <- opls(mfa_data, classes,
predI = 1, orthoI = NA)
data.oplsda <- opls(mfa_data, classes,
predI = 1, orthoI = 10)
data.oplsda <- opls(mfa_data, classes,
predI = 1, orthoI = 1)
